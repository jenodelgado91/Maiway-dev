{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maipc3\\\\Desktop\\\\branchfor2live\\\\maiway-dev\\\\src\\\\components\\\\App.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./AppRouter\";\nimport { authSvc } from \"../fBase\";\nimport { connect } from \"react-redux\";\nimport { setLoginUserObj } from \"../store/loginReducer\";\nimport { FQcheckUser } from \"../fQuery\";\nimport { Initializing, LoadingIndicator } from \"./commons\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction App({\n  setLoginUserObj\n}) {\n  const [init, setInit] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    authSvc.onAuthStateChanged(async user => {\n      // console.log(user);\n      if (user) {\n        const arrUserInfo = await FQcheckUser(user.uid);\n\n        if (arrUserInfo.length > 0) {\n          setLoginUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            photoURL: user.photoURL,\n            updateProfile: args => user.updateProfile(args)\n          });\n        } else {\n          alert(t(\"There is no user record corresponding to this identifier.\"));\n          authSvc.signOut();\n        }\n      } else {\n        setLoginUserObj({\n          displayName: null,\n          uid: null,\n          photoURL: null,\n          updateProfile: null\n        });\n      }\n\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authSvc.currentUser;\n    setLoginUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      photoURL: user.photoURL,\n      updateProfile: args => user.updateProfile(args)\n    });\n  };\n\n  const callLoading = type => {\n    if (type) {\n      const isLoading = type === \"WAITING\" ? true : false;\n      setIsLoading(isLoading); // setIsLoading((prevState: boolean) => !prevState);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, init ? /*#__PURE__*/React.createElement(AppRouter, {\n    refreshUser: refreshUser,\n    callLoading: callLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Initializing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(LoadingIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }));\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setLoginUserObj: data => dispatch(setLoginUserObj(data))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/maipc3/Desktop/branchfor2live/maiway-dev/src/components/App.tsx"],"names":["React","useEffect","useState","AppRouter","authSvc","connect","setLoginUserObj","FQcheckUser","Initializing","LoadingIndicator","useTranslation","App","init","setInit","isLoading","setIsLoading","t","onAuthStateChanged","user","arrUserInfo","uid","length","displayName","photoURL","updateProfile","args","alert","signOut","refreshUser","currentUser","callLoading","type","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./AppRouter\";\nimport { authSvc } from \"../fBase\";\nimport { connect } from \"react-redux\";\nimport { loginProps, setLoginUserObj } from \"../store/loginReducer\";\nimport { FQcheckUser } from \"../fQuery\";\nimport { Initializing, LoadingIndicator } from \"./commons\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface AppProps {\n  setLoginUserObj: (data: loginProps) => void;\n}\n\nfunction App({ setLoginUserObj }: AppProps) {\n  const [init, setInit] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    authSvc.onAuthStateChanged(async (user: any) => {\n      // console.log(user);\n      if (user) {\n        const arrUserInfo = await FQcheckUser(user.uid);\n        if (arrUserInfo.length > 0) {\n          setLoginUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            photoURL: user.photoURL,\n            updateProfile: (args: any) => user.updateProfile(args),\n          });\n        } else {\n          alert(t(\"There is no user record corresponding to this identifier.\"));\n          authSvc.signOut();\n        }\n      } else {\n        setLoginUserObj({\n          displayName: null,\n          uid: null,\n          photoURL: null,\n          updateProfile: null,\n        });\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user: any = authSvc.currentUser;\n    setLoginUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      photoURL: user.photoURL,\n      updateProfile: (args: any) => user.updateProfile(args),\n    });\n  };\n\n  type typeProp = \"WAITING\" | \"SUCCESS\";\n  const callLoading = (type?: typeProp) => {\n    if (type) {\n      const isLoading = type === \"WAITING\" ? true : false;\n      setIsLoading(isLoading);\n      // setIsLoading((prevState: boolean) => !prevState);\n    }\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter refreshUser={refreshUser} callLoading={callLoading} />\n      ) : (\n        <Initializing />\n      )}\n      {isLoading && <LoadingIndicator />}\n    </>\n  );\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    setLoginUserObj: (data: loginProps) => dispatch(setLoginUserObj(data)),\n  };\n}\nexport default connect(null, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}