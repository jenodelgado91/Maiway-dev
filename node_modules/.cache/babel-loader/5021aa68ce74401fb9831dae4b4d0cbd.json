{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maipc3\\\\Desktop\\\\branchfor2live\\\\maiway-dev\\\\src\\\\components\\\\Places\\\\PlacesPopup.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Modal, Backdrop, Fade, Button, CardContent, Typography, Paper, Tabs, CssBaseline, Tab } from \"@material-ui/core\";\nimport { saveRequest, updateRequest } from \"../../store/cudReducer\";\nimport { updatePage } from \"../../store/placesReducer\";\nimport { DraggableDialog, CmmnTabPanel, LoadingIndicator } from \"../commons\";\nimport { deleteImageToStorage, downloadImageToStorage, FQGeoPoint, FQtimestampNow, uploadImageToStorage } from \"../../fQuery\";\nimport { useTranslation } from \"react-i18next\";\nimport BasicTab from \"./BasicTab\";\nimport CountryTab from \"./CountryTab\";\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    width: 1024,\n    maxHeight: 800,\n    height: 768,\n    overflow: \"auto\"\n  },\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: \"100%\"\n  },\n  customButton2: {\n    width: \"8vw\",\n    minWidth: \"80px\",\n    height: \"3.5vh\",\n    marginLeft: theme.spacing(1)\n  },\n  bottom: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\"\n  }\n}));\n\nfunction PlacesPopup({\n  open,\n  handleClose,\n  fnSave,\n  fnUpdate,\n  selectedRow,\n  commonList,\n  updatePage,\n  cudStatus\n}) {\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation();\n  const [value, setValue] = useState(0);\n  const [attachment, setAttachment] = useState([]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const [inputs, setInputs] = useState({\n    address: \"\",\n    latitude: \"\",\n    longitude: \"\",\n    currency: \"\",\n    en_name: \"\",\n    fr_name: \"\",\n    jp_name: \"\",\n    kr_name: \"\",\n    ph_name: \"\",\n    cn_name: \"\",\n    tc_name: \"\",\n    en_descr: \"\",\n    fr_descr: \"\",\n    jp_descr: \"\",\n    kr_descr: \"\",\n    ph_descr: \"\",\n    cn_descr: \"\",\n    tc_descr: \"\",\n    photos: [],\n    opening_hours: [\"\"]\n  });\n  const [openMap, setOpenMap] = useState(false);\n  const [openDialog, setOpenDialog] = useState(false);\n  const {\n    address,\n    latitude,\n    longitude,\n    currency,\n    en_name,\n    fr_name,\n    jp_name,\n    kr_name,\n    ph_name,\n    cn_name,\n    tc_name,\n    en_descr,\n    fr_descr,\n    jp_descr,\n    kr_descr,\n    ph_descr,\n    cn_descr,\n    tc_descr,\n    photos,\n    opening_hours\n  } = inputs;\n  const [country, setCountry] = useState(\"Select\");\n  const [category, setCategory] = useState(\"Select\");\n  const [alertMsg, setAlertMsg] = useState(\"New\");\n  const [latLng, setLatLng] = useState({\n    lat: \"\",\n    lng: \"\"\n  });\n  useEffect(() => {\n    if (open && selectedRow) {\n      var _selectedRow$geo, _selectedRow$geo2;\n\n      setAlertMsg(\"Update\");\n      setInputs({\n        address: selectedRow.address || \"\",\n        latitude: ((_selectedRow$geo = selectedRow.geo) === null || _selectedRow$geo === void 0 ? void 0 : _selectedRow$geo.latitude) || 0,\n        longitude: ((_selectedRow$geo2 = selectedRow.geo) === null || _selectedRow$geo2 === void 0 ? void 0 : _selectedRow$geo2.longitude) || 0,\n        currency: selectedRow.currency || \"\",\n        en_name: selectedRow.en_name || \"\",\n        fr_name: selectedRow.fr_name || \"\",\n        jp_name: selectedRow.jp_name || \"\",\n        kr_name: selectedRow.kr_name || \"\",\n        ph_name: selectedRow.ph_name || \"\",\n        cn_name: selectedRow.cn_name || \"\",\n        tc_name: selectedRow.tc_name || \"\",\n        en_descr: selectedRow.en_descr || \"\",\n        fr_descr: selectedRow.fr_descr || \"\",\n        jp_descr: selectedRow.jp_descr || \"\",\n        kr_descr: selectedRow.kr_descr || \"\",\n        ph_descr: selectedRow.ph_descr || \"\",\n        cn_descr: selectedRow.cn_descr || \"\",\n        tc_descr: selectedRow.tc_descr || \"\",\n        photos: selectedRow.photos || [],\n        opening_hours: selectedRow.opening_hours || [\"\"] // opening_hours: [\n        //   \"Monday (10:00AM - 5:00PM), Tuesday (10:00AM - 5:00PM), Saturday (10:00AM - 5:00PM)\",\n        // ],\n\n      });\n      setCountry(selectedRow.country_code || \"Select\");\n      setCategory(selectedRow.category || \"Select\");\n\n      if (selectedRow.photos) {\n        getImgUrl(selectedRow.photos); // getImgUrl([\n        //   \"places/1ktCJus1GqD9GwNdFkEZ/1ktCJus1GqD9GwNdFkEZ_01.jpg\",\n        //   \"places/1ktCJus1GqD9GwNdFkEZ/1ktCJus1GqD9GwNdFkEZ_01.jpg\",\n        // ]);\n      }\n    }\n\n    return () => {\n      setInputs({\n        address: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        currency: \"\",\n        en_name: \"\",\n        fr_name: \"\",\n        jp_name: \"\",\n        kr_name: \"\",\n        ph_name: \"\",\n        cn_name: \"\",\n        tc_name: \"\",\n        en_descr: \"\",\n        fr_descr: \"\",\n        jp_descr: \"\",\n        kr_descr: \"\",\n        ph_descr: \"\",\n        cn_descr: \"\",\n        tc_descr: \"\",\n        photos: [],\n        opening_hours: [\"\"]\n      });\n      setCountry(\"Select\");\n      setCategory(\"Select\");\n      setAttachment(null);\n    };\n  }, [open]);\n\n  if (!open) {\n    return null;\n  }\n  /**\n   * get images url\n   */\n\n\n  const getImgUrl = async photos => {\n    const arrImg = await downloadImageToStorage(photos);\n    setAttachment(arrImg);\n  };\n  /**\n   * add images\n   */\n\n\n  const addImg = newImg => {\n    setAttachment(prev => {\n      if (prev) {\n        return [...prev, ...newImg];\n      }\n\n      return newImg;\n    });\n  };\n  /**\n   * delete images\n   */\n\n\n  const deleteImg = async args => {\n    // console.log(args);\n    // console.log(selectedRow.photos);\n    if (args.isNew) {\n      // 1. update attachment\n      setAttachment(prev => {\n        if (prev) {\n          return prev.filter(prev => prev.img !== args.img);\n        }\n\n        return [];\n      });\n    } else {\n      // 1. delete storage\n      await deleteImageToStorage(args.img);\n      const doc = selectedRow.key;\n      const filterImgs = selectedRow.photos.filter(img => img !== args.orgImg);\n      const params = {\n        key: selectedRow.key,\n        photos: filterImgs\n      }; // 2. delete firstore\n\n      await fnUpdate(\"places\", doc, params); // 3. update placesReducer\n\n      updatePage(params); // 4. update attachment\n\n      setAttachment(prev => {\n        if (prev) {\n          return prev.filter(prev => prev.orgImg !== args.orgImg);\n        }\n\n        return [];\n      });\n      setInputs(prev => ({ ...prev,\n        photos: prev.photos.filter(img => img !== args.orgImg)\n      }));\n    }\n  };\n\n  const onChange = ev => {\n    const {\n      value,\n      name\n    } = ev.target;\n    setInputs({ ...inputs,\n      [name]: value\n    });\n  };\n\n  const handleCountryChange = ev => {\n    var _selCountry$;\n\n    setCountry(ev.target.value);\n    const selCountry = commonList[\"country\"].filter(ctry => ctry.Ctry_Code === ev.target.value);\n    const currency = (_selCountry$ = selCountry[0]) === null || _selCountry$ === void 0 ? void 0 : _selCountry$.Ctry_Currency;\n    setInputs({ ...inputs,\n      currency\n    });\n  };\n\n  const handleCategoryChange = ev => {\n    setCategory(ev.target.value);\n  };\n  /**\n   * save or update\n   */\n\n\n  const handleSave = async arrImgUrl => {\n    const selCountry = commonList[\"country\"].filter(ctry => ctry.Ctry_Code === country); // const currency = selCountry[0]?.Ctry_Currency;\n    // console.log(photos);\n    // console.log(arrImgUrl);\n\n    const arrImg = arrImgUrl && [...photos, ...arrImgUrl] || [...photos];\n    const params = {\n      address,\n      geo: FQGeoPoint(latitude, longitude),\n      en_name,\n      fr_name,\n      jp_name,\n      kr_name,\n      ph_name,\n      cn_name,\n      tc_name,\n      en_descr,\n      fr_descr,\n      jp_descr,\n      kr_descr,\n      ph_descr,\n      cn_descr,\n      tc_descr,\n      country_code: country,\n      currency,\n      category,\n      photos: arrImg,\n      opening_hours,\n      update_at: FQtimestampNow()\n    };\n\n    if (!selectedRow) {\n      // 신규\n      const newParams = {\n        business_status: true,\n        created_at: FQtimestampNow(),\n        creator: \"\",\n        formatted_phone_number: \"\",\n        guide_id: \"\",\n        is_featured: true,\n        locality: \"\",\n        modifier: \"\",\n        opening_hours: [],\n        photos: arrImg,\n        price1: 0,\n        price2: 0,\n        rating: 0,\n        status: 1,\n        update_at: FQtimestampNow(),\n        use_yn: \"\",\n        user_ratings_total: 0,\n        website: \"\"\n      };\n      await fnSave(\"places\", { ...params,\n        ...newParams\n      });\n      handleClose();\n    } else {\n      // 업데이트\n      // const obj2 = { ...obj, doc: selectedRow.key };\n      const doc = selectedRow.key;\n      await fnUpdate(\"places\", doc, params);\n      handleClose({ ...selectedRow,\n        ...params\n      });\n    }\n  };\n\n  const validationCheck = () => {\n    if (country === \"Select\") {\n      alert(t(\"Please select a country\"));\n      return false;\n    } else if (category === \"Select\") {\n      alert(t(\"Please select a category\"));\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * confirm 팝업 open\n   */\n\n\n  const handleClickOpenDialog = () => {\n    if (!validationCheck()) {\n      return false;\n    }\n\n    setOpenDialog(true);\n  };\n  /**\n   * confirm 팝업 close\n   */\n\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n  /**\n   * image upload\n   */\n\n\n  const uploadImages = async () => {\n    const uploadImages = attachment === null || attachment === void 0 ? void 0 : attachment.filter(img => img.isNew);\n\n    if (uploadImages && uploadImages.length > 0) {\n      const uploadedImgs = await uploadImageToStorage(uploadImages);\n      return uploadedImgs;\n    }\n  };\n  /**\n   * insert or update\n   */\n\n\n  const handleUpdate = async () => {\n    setOpenDialog(false);\n    const arrImgUrl = await uploadImages();\n    await handleSave(arrImgUrl); // console.log(\"updte\");\n  };\n  /**\n   * map 팝업 close\n   */\n\n\n  const handleCloseMap = params => {\n    // params.key && updatePage(params);\n    setOpenMap(false);\n  };\n\n  const onLatLngChang = (latLng, address) => {\n    // console.log(latLng);\n    setInputs(prevState => ({ ...prevState,\n      latitude: latLng.lat,\n      longitude: latLng.lng,\n      address\n    })); // setOpenMap(false);\n  };\n\n  const setOpenMapDefault = () => {\n    const selCountry = commonList[\"country\"].filter(ctry => ctry.Ctry_Code === country);\n    const arrLatLng = selCountry[0].Ctry_Latlng.split(\",\");\n    arrLatLng && setLatLng({\n      lat: parseFloat(arrLatLng[0]),\n      lng: parseFloat(arrLatLng[1])\n    });\n    arrLatLng && setOpenMap(true);\n  };\n\n  const handleClearMap = () => {\n    setInputs(prevState => ({ ...prevState,\n      latitude: \"\",\n      longitude: \"\"\n    }));\n  };\n\n  const arrCountryTabs = [{\n    name: \"en\",\n    value: en_name,\n    descr: en_descr\n  }, {\n    name: \"kr\",\n    value: kr_name,\n    descr: kr_descr\n  }, {\n    name: \"ph\",\n    value: ph_name,\n    descr: ph_descr\n  }, {\n    name: \"fr\",\n    value: fr_name,\n    descr: fr_descr\n  }, {\n    name: \"jp\",\n    value: jp_name,\n    descr: jp_descr\n  }, {\n    name: \"cn\",\n    value: cn_name,\n    descr: cn_descr\n  }, {\n    name: \"tc\",\n    value: tc_name,\n    descr: tc_descr\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }\n  }, \"New / Modify\"), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    \"aria-label\": \"simple tabs example\",\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 15\n    }\n  }, [\"BASIC\", \"EN\", \"KR\", \"PH\", \"FR\", \"JP\", \"CN\", \"TC\"].map(label => /*#__PURE__*/React.createElement(Tab, {\n    key: label,\n    label: t(label),\n    style: {\n      minWidth: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CmmnTabPanel, {\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(BasicTab, {\n    commonList: commonList,\n    country: country,\n    category: category,\n    address: address,\n    latitude: latitude,\n    longitude: longitude,\n    currency: currency,\n    attachment: attachment,\n    opening_hours: opening_hours,\n    handleCountryChange: handleCountryChange,\n    handleCategoryChange: handleCategoryChange,\n    onChange: onChange,\n    onLatLngChang: onLatLngChang,\n    handleClearMap: handleClearMap,\n    addImg: addImg,\n    deleteImg: deleteImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 17\n    }\n  })), arrCountryTabs.map((ctry, idx) => /*#__PURE__*/React.createElement(CmmnTabPanel, {\n    key: idx,\n    value: value,\n    index: idx + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CountryTab, {\n    value: ctry.value,\n    descr: ctry.descr,\n    name: ctry.name,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.customButton2,\n    onClick: handleClickOpenDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 17\n    }\n  }, \"Save\"))), cudStatus === \"WAITING\" && /*#__PURE__*/React.createElement(LoadingIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(DraggableDialog, {\n    handleCloseDialog: handleCloseDialog,\n    openDialog: openDialog,\n    handleYesDialog: handleUpdate,\n    alertTitle: alertMsg,\n    alertMsg: `${alertMsg}?`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(state, ownProps) {\n  let selectedRow = [];\n\n  if (state.placesReducer) {\n    const {\n      rowData\n    } = state.placesReducer;\n    selectedRow = rowData === null || rowData === void 0 ? void 0 : rowData.filter(row => row.key === ownProps.selectedID)[0];\n  }\n\n  return {\n    selectedRow: selectedRow,\n    commonList: state.fsCmmnArrayReducer.rowData,\n    cudStatus: state.cudReducer.status\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fnSave: (col, params) => dispatch(saveRequest(col, params)),\n    fnUpdate: (col, doc, params) => dispatch(updateRequest(col, doc, params)),\n    updatePage: param => dispatch(updatePage(param))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlacesPopup);","map":{"version":3,"sources":["C:/Users/maipc3/Desktop/branchfor2live/maiway-dev/src/components/Places/PlacesPopup.tsx"],"names":["React","useState","useEffect","connect","makeStyles","Modal","Backdrop","Fade","Button","CardContent","Typography","Paper","Tabs","CssBaseline","Tab","saveRequest","updateRequest","updatePage","DraggableDialog","CmmnTabPanel","LoadingIndicator","deleteImageToStorage","downloadImageToStorage","FQGeoPoint","FQtimestampNow","uploadImageToStorage","useTranslation","BasicTab","CountryTab","useStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","width","maxHeight","height","overflow","root","customButton2","minWidth","marginLeft","bottom","PlacesPopup","open","handleClose","fnSave","fnUpdate","selectedRow","commonList","cudStatus","classes","t","value","setValue","attachment","setAttachment","handleChange","event","newValue","inputs","setInputs","address","latitude","longitude","currency","en_name","fr_name","jp_name","kr_name","ph_name","cn_name","tc_name","en_descr","fr_descr","jp_descr","kr_descr","ph_descr","cn_descr","tc_descr","photos","opening_hours","openMap","setOpenMap","openDialog","setOpenDialog","country","setCountry","category","setCategory","alertMsg","setAlertMsg","latLng","setLatLng","lat","lng","geo","country_code","getImgUrl","arrImg","addImg","newImg","prev","deleteImg","args","isNew","filter","img","doc","key","filterImgs","orgImg","params","onChange","ev","name","target","handleCountryChange","selCountry","ctry","Ctry_Code","Ctry_Currency","handleCategoryChange","handleSave","arrImgUrl","update_at","newParams","business_status","created_at","creator","formatted_phone_number","guide_id","is_featured","locality","modifier","price1","price2","rating","status","use_yn","user_ratings_total","website","validationCheck","alert","handleClickOpenDialog","handleCloseDialog","uploadImages","length","uploadedImgs","handleUpdate","handleCloseMap","onLatLngChang","prevState","setOpenMapDefault","arrLatLng","Ctry_Latlng","split","parseFloat","handleClearMap","arrCountryTabs","descr","timeout","map","label","idx","mapStateToProps","state","ownProps","placesReducer","rowData","row","selectedID","fsCmmnArrayReducer","cudReducer","mapDispatchToProps","dispatch","col","param"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Modal,\n  Backdrop,\n  Fade,\n  Button,\n  CardContent,\n  Typography,\n  Paper,\n  Tabs,\n  CssBaseline,\n  Tab,\n  Box,\n} from \"@material-ui/core\";\n\nimport { saveRequest, updateRequest } from \"../../store/cudReducer\";\nimport { updatePage } from \"../../store/placesReducer\";\nimport { DraggableDialog, CmmnTabPanel, LoadingIndicator } from \"../commons\";\nimport {\n  deleteImageToStorage,\n  downloadImageToStorage,\n  FQGeoPoint,\n  FQtimestampNow,\n  uploadImageToStorage,\n} from \"../../fQuery\";\nimport { rootState } from \"../../store\";\nimport { useTranslation } from \"react-i18next\";\nimport BasicTab from \"./BasicTab\";\nimport CountryTab from \"./CountryTab\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    width: 1024,\n    maxHeight: 800,\n    height: 768,\n    overflow: \"auto\",\n  },\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: \"100%\",\n  },\n  customButton2: {\n    width: \"8vw\",\n    minWidth: \"80px\",\n    height: \"3.5vh\",\n    marginLeft: theme.spacing(1),\n  },\n  bottom: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n  },\n}));\n\nexport interface AttachmentType {\n  img: string;\n  ext?: string;\n  isNew?: boolean;\n  orgImg?: string;\n}\n\nfunction PlacesPopup({\n  open,\n  handleClose,\n  fnSave,\n  fnUpdate,\n  selectedRow,\n  commonList,\n  updatePage,\n  cudStatus,\n}: any) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [value, setValue] = useState(0);\n  const [attachment, setAttachment] = useState<AttachmentType[] | null>([]);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const [inputs, setInputs] = useState({\n    address: \"\",\n    latitude: \"\",\n    longitude: \"\",\n    currency: \"\",\n    en_name: \"\",\n    fr_name: \"\",\n    jp_name: \"\",\n    kr_name: \"\",\n    ph_name: \"\",\n    cn_name: \"\",\n    tc_name: \"\",\n    en_descr: \"\",\n    fr_descr: \"\",\n    jp_descr: \"\",\n    kr_descr: \"\",\n    ph_descr: \"\",\n    cn_descr: \"\",\n    tc_descr: \"\",\n    photos: [],\n    opening_hours: [\"\"],\n  });\n\n  const [openMap, setOpenMap] = useState(false);\n  const [openDialog, setOpenDialog] = useState(false);\n  const {\n    address,\n    latitude,\n    longitude,\n    currency,\n    en_name,\n    fr_name,\n    jp_name,\n    kr_name,\n    ph_name,\n    cn_name,\n    tc_name,\n    en_descr,\n    fr_descr,\n    jp_descr,\n    kr_descr,\n    ph_descr,\n    cn_descr,\n    tc_descr,\n    photos,\n    opening_hours,\n  } = inputs;\n\n  const [country, setCountry] = useState(\"Select\");\n  const [category, setCategory] = useState<string | number>(\"Select\");\n  const [alertMsg, setAlertMsg] = useState(\"New\");\n  const [latLng, setLatLng] = useState<any>({ lat: \"\", lng: \"\" });\n  useEffect(() => {\n    if (open && selectedRow) {\n      setAlertMsg(\"Update\");\n      setInputs({\n        address: selectedRow.address || \"\",\n        latitude: selectedRow.geo?.latitude || 0,\n        longitude: selectedRow.geo?.longitude || 0,\n        currency: selectedRow.currency || \"\",\n        en_name: selectedRow.en_name || \"\",\n        fr_name: selectedRow.fr_name || \"\",\n        jp_name: selectedRow.jp_name || \"\",\n        kr_name: selectedRow.kr_name || \"\",\n        ph_name: selectedRow.ph_name || \"\",\n        cn_name: selectedRow.cn_name || \"\",\n        tc_name: selectedRow.tc_name || \"\",\n        en_descr: selectedRow.en_descr || \"\",\n        fr_descr: selectedRow.fr_descr || \"\",\n        jp_descr: selectedRow.jp_descr || \"\",\n        kr_descr: selectedRow.kr_descr || \"\",\n        ph_descr: selectedRow.ph_descr || \"\",\n        cn_descr: selectedRow.cn_descr || \"\",\n        tc_descr: selectedRow.tc_descr || \"\",\n        photos: selectedRow.photos || [],\n        opening_hours: selectedRow.opening_hours || [\"\"],\n        // opening_hours: [\n        //   \"Monday (10:00AM - 5:00PM), Tuesday (10:00AM - 5:00PM), Saturday (10:00AM - 5:00PM)\",\n        // ],\n      });\n      setCountry(selectedRow.country_code || \"Select\");\n      setCategory(selectedRow.category || \"Select\");\n      if (selectedRow.photos) {\n        getImgUrl(selectedRow.photos);\n        // getImgUrl([\n        //   \"places/1ktCJus1GqD9GwNdFkEZ/1ktCJus1GqD9GwNdFkEZ_01.jpg\",\n        //   \"places/1ktCJus1GqD9GwNdFkEZ/1ktCJus1GqD9GwNdFkEZ_01.jpg\",\n        // ]);\n      }\n    }\n    return () => {\n      setInputs({\n        address: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        currency: \"\",\n        en_name: \"\",\n        fr_name: \"\",\n        jp_name: \"\",\n        kr_name: \"\",\n        ph_name: \"\",\n        cn_name: \"\",\n        tc_name: \"\",\n        en_descr: \"\",\n        fr_descr: \"\",\n        jp_descr: \"\",\n        kr_descr: \"\",\n        ph_descr: \"\",\n        cn_descr: \"\",\n        tc_descr: \"\",\n        photos: [],\n        opening_hours: [\"\"],\n      });\n      setCountry(\"Select\");\n      setCategory(\"Select\");\n      setAttachment(null);\n    };\n  }, [open]);\n\n  if (!open) {\n    return null;\n  }\n\n  /**\n   * get images url\n   */\n  const getImgUrl = async (photos: string[]) => {\n    const arrImg = await downloadImageToStorage(photos);\n    setAttachment(arrImg);\n  };\n\n  /**\n   * add images\n   */\n  const addImg = (newImg: AttachmentType[]) => {\n    setAttachment((prev) => {\n      if (prev) {\n        return [...prev, ...newImg];\n      }\n      return newImg;\n    });\n  };\n\n  /**\n   * delete images\n   */\n  const deleteImg = async (args: any) => {\n    // console.log(args);\n    // console.log(selectedRow.photos);\n    if (args.isNew) {\n      // 1. update attachment\n      setAttachment((prev) => {\n        if (prev) {\n          return prev.filter((prev) => prev.img !== args.img);\n        }\n        return [];\n      });\n    } else {\n      // 1. delete storage\n      await deleteImageToStorage(args.img);\n      const doc = selectedRow.key;\n      const filterImgs = selectedRow.photos.filter(\n        (img: string) => img !== args.orgImg\n      );\n      const params = { key: selectedRow.key, photos: filterImgs };\n      // 2. delete firstore\n      await fnUpdate(\"places\", doc, params);\n      // 3. update placesReducer\n      updatePage(params);\n\n      // 4. update attachment\n      setAttachment((prev) => {\n        if (prev) {\n          return prev.filter((prev) => prev.orgImg !== args.orgImg);\n        }\n        return [];\n      });\n      setInputs((prev) => ({\n        ...prev,\n        photos: prev.photos.filter((img) => img !== args.orgImg),\n      }));\n    }\n  };\n\n  const onChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = ev.target;\n    setInputs({ ...inputs, [name]: value });\n  };\n\n  const handleCountryChange = (ev: React.ChangeEvent<{ value: unknown }>) => {\n    setCountry(ev.target.value as string);\n\n    const selCountry = commonList[\"country\"].filter(\n      (ctry: any) => ctry.Ctry_Code === ev.target.value\n    );\n\n    const currency = selCountry[0]?.Ctry_Currency;\n    setInputs({ ...inputs, currency });\n  };\n  const handleCategoryChange = (ev: React.ChangeEvent<{ value: unknown }>) => {\n    setCategory(ev.target.value as number);\n  };\n\n  /**\n   * save or update\n   */\n  const handleSave = async (arrImgUrl?: string[]) => {\n    const selCountry = commonList[\"country\"].filter(\n      (ctry: any) => ctry.Ctry_Code === country\n    );\n\n    // const currency = selCountry[0]?.Ctry_Currency;\n    // console.log(photos);\n    // console.log(arrImgUrl);\n    const arrImg = (arrImgUrl && [...photos, ...arrImgUrl]) || [...photos];\n    const params = {\n      address,\n      geo: FQGeoPoint(latitude, longitude),\n      en_name,\n      fr_name,\n      jp_name,\n      kr_name,\n      ph_name,\n      cn_name,\n      tc_name,\n      en_descr,\n      fr_descr,\n      jp_descr,\n      kr_descr,\n      ph_descr,\n      cn_descr,\n      tc_descr,\n      country_code: country,\n      currency,\n      category,\n      photos: arrImg,\n      opening_hours,\n      update_at: FQtimestampNow(),\n    };\n    if (!selectedRow) {\n      // 신규\n      const newParams = {\n        business_status: true,\n        created_at: FQtimestampNow(),\n        creator: \"\",\n        formatted_phone_number: \"\",\n        guide_id: \"\",\n        is_featured: true,\n        locality: \"\",\n        modifier: \"\",\n        opening_hours: [],\n        photos: arrImg,\n        price1: 0,\n        price2: 0,\n        rating: 0,\n        status: 1,\n        update_at: FQtimestampNow(),\n        use_yn: \"\",\n        user_ratings_total: 0,\n        website: \"\",\n      };\n      await fnSave(\"places\", { ...params, ...newParams });\n      handleClose();\n    } else {\n      // 업데이트\n      // const obj2 = { ...obj, doc: selectedRow.key };\n      const doc = selectedRow.key;\n      await fnUpdate(\"places\", doc, params);\n      handleClose({ ...selectedRow, ...params });\n    }\n  };\n\n  const validationCheck = () => {\n    if (country === \"Select\") {\n      alert(t(\"Please select a country\"));\n      return false;\n    } else if (category === \"Select\") {\n      alert(t(\"Please select a category\"));\n      return false;\n    }\n    return true;\n  };\n  /**\n   * confirm 팝업 open\n   */\n  const handleClickOpenDialog = () => {\n    if (!validationCheck()) {\n      return false;\n    }\n    setOpenDialog(true);\n  };\n  /**\n   * confirm 팝업 close\n   */\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  /**\n   * image upload\n   */\n  const uploadImages = async () => {\n    const uploadImages = attachment?.filter((img) => img.isNew);\n\n    if (uploadImages && uploadImages.length > 0) {\n      const uploadedImgs = await uploadImageToStorage(uploadImages);\n      return uploadedImgs;\n    }\n  };\n\n  /**\n   * insert or update\n   */\n  const handleUpdate = async () => {\n    setOpenDialog(false);\n    const arrImgUrl = await uploadImages();\n    await handleSave(arrImgUrl);\n    // console.log(\"updte\");\n  };\n\n  /**\n   * map 팝업 close\n   */\n  const handleCloseMap = (params: any) => {\n    // params.key && updatePage(params);\n    setOpenMap(false);\n  };\n\n  const onLatLngChang = (latLng: any, address: any) => {\n    // console.log(latLng);\n    setInputs((prevState) => ({\n      ...prevState,\n      latitude: latLng.lat,\n      longitude: latLng.lng,\n      address,\n    }));\n    // setOpenMap(false);\n  };\n\n  const setOpenMapDefault = () => {\n    const selCountry = commonList[\"country\"].filter(\n      (ctry: any) => ctry.Ctry_Code === country\n    );\n\n    const arrLatLng = selCountry[0].Ctry_Latlng.split(\",\");\n\n    arrLatLng &&\n      setLatLng({\n        lat: parseFloat(arrLatLng[0]),\n        lng: parseFloat(arrLatLng[1]),\n      });\n    arrLatLng && setOpenMap(true);\n  };\n\n  const handleClearMap = () => {\n    setInputs((prevState) => ({ ...prevState, latitude: \"\", longitude: \"\" }));\n  };\n\n  const arrCountryTabs = [\n    { name: \"en\", value: en_name, descr: en_descr },\n    { name: \"kr\", value: kr_name, descr: kr_descr },\n    { name: \"ph\", value: ph_name, descr: ph_descr },\n    { name: \"fr\", value: fr_name, descr: fr_descr },\n    { name: \"jp\", value: jp_name, descr: jp_descr },\n    { name: \"cn\", value: cn_name, descr: cn_descr },\n    { name: \"tc\", value: tc_name, descr: tc_descr },\n  ] as const;\n  return (\n    <>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <Typography variant=\"h6\" gutterBottom>\n              New / Modify\n            </Typography>\n            <Paper className={classes.root}>\n              <Tabs\n                aria-label=\"simple tabs example\"\n                value={value}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n              >\n                {[\"BASIC\", \"EN\", \"KR\", \"PH\", \"FR\", \"JP\", \"CN\", \"TC\"].map(\n                  (label) => (\n                    <Tab\n                      key={label}\n                      label={t(label)}\n                      style={{ minWidth: 100 }}\n                    />\n                  )\n                )}\n              </Tabs>\n              <CssBaseline />\n              <CmmnTabPanel value={value} index={0}>\n                <BasicTab\n                  commonList={commonList}\n                  country={country}\n                  category={category}\n                  address={address}\n                  latitude={latitude}\n                  longitude={longitude}\n                  currency={currency}\n                  attachment={attachment}\n                  opening_hours={opening_hours}\n                  handleCountryChange={handleCountryChange}\n                  handleCategoryChange={handleCategoryChange}\n                  onChange={onChange}\n                  onLatLngChang={onLatLngChang}\n                  handleClearMap={handleClearMap}\n                  addImg={addImg}\n                  deleteImg={deleteImg}\n                />\n              </CmmnTabPanel>\n              {arrCountryTabs.map((ctry, idx) => (\n                <CmmnTabPanel key={idx} value={value} index={idx + 1}>\n                  <CountryTab\n                    value={ctry.value}\n                    descr={ctry.descr}\n                    name={ctry.name}\n                    onChange={onChange}\n                  />\n                </CmmnTabPanel>\n              ))}\n            </Paper>\n            <CardContent>\n              <div className={classes.bottom}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.customButton2}\n                  onClick={handleClickOpenDialog}\n                >\n                  Save\n                </Button>\n              </div>\n            </CardContent>\n            {cudStatus === \"WAITING\" && <LoadingIndicator />}\n          </div>\n        </Fade>\n      </Modal>\n      <DraggableDialog\n        handleCloseDialog={handleCloseDialog}\n        openDialog={openDialog}\n        handleYesDialog={handleUpdate}\n        alertTitle={alertMsg}\n        alertMsg={`${alertMsg}?`}\n      />\n    </>\n  );\n}\n\nfunction mapStateToProps(state: rootState, ownProps: any) {\n  let selectedRow = [];\n  if (state.placesReducer) {\n    const { rowData } = state.placesReducer;\n    selectedRow = rowData?.filter(\n      (row: any) => row.key === ownProps.selectedID\n    )[0];\n  }\n  return {\n    selectedRow: selectedRow,\n    commonList: state.fsCmmnArrayReducer.rowData,\n    cudStatus: state.cudReducer.status,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    fnSave: (col: string, params: any) => dispatch(saveRequest(col, params)),\n    fnUpdate: (col: string, doc: string, params: any) =>\n      dispatch(updateRequest(col, doc, params)),\n    updatePage: (param: any) => dispatch(updatePage(param)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlacesPopup);\n"]},"metadata":{},"sourceType":"module"}