{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maipc3\\\\Desktop\\\\branchfor2live\\\\maiway-dev\\\\src\\\\components\\\\Upload\\\\ExcelReader.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport Firebase from 'firebase';\nimport XLSX from 'xlsx';\nimport { make_cols } from './MakeColumns';\nimport { SheetJSFT } from './types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button, createStyles, Grid, makeStyles, TextField, Theme } from \"@material-ui/core\";\n\nclass ExcelReader extends Component {\n  constructor(props) {\n    super(props); // this.ref = Firebase.firestore().collection(\"places\");\n    // this.unsubscribe = null;\n\n    this.state = {};\n    this.handleFile = this.handleFile.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const files = e.target.files;\n    if (files && files[0]) this.setState({\n      file: files[0]\n    });\n  }\n\n  handleFile() {\n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n\n    reader.onload = e => {\n      ///// Parse data \n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, {\n        type: rABS ? 'binary' : 'array',\n        bookVBA: true\n      }); ///// Get first worksheet \n\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname]; //// Convert array of arrays\n\n      const data = XLSX.utils.sheet_to_json(ws); //// Update state \n\n      this.setState({\n        data: data,\n        cols: make_cols(ws['!ref'])\n      }, () => {\n        console.log(JSON.stringify(this.state.data, null, 2)); // const myDataStr = data.toString();\n        // const test = Object.values( data );\n\n        const myDataStr = JSON.stringify(data);\n        console.log(\">>>>>>>>>\", myDataStr);\n        const db = Firebase.firestore();\n        db.collection(\"places\").doc().set({\n          // address: data[0].Address,\n          // business_status: data[0].Business_status,\n          // category: data[0].CategoryNo,\n          // cn_descr: data[0].Cn_descr,\n          // cn_name: data[0].Cn_name,\n          // country_code: data[0].Country_code,\n          // created_at: data[0].Created_at,\n          // creator: data[0].Creator,\n          // currency: data[0].Currency,\n          // en_descr: data[0].En_descr,\n          // en_name: data[0].En_name,\n          // formatted_phone_number: data[0].Formatted_phone_number,\n          // fr_descr: data[0].Fr_descr,\n          // fr_name: data[0].fr_name,\n          // geo: data[0].Geo_location,\n          // guide_id: data[0].Guide_id,\n          // is_featured: data[0].Is_featured,\n          // jp_descr: data[0].Jp_descr,\n          // jp_Name: data[0].Jp_name,\n          // kr_descr: data[0].Kr_descr,\n          // kr_name: data[0].Kr_name,\n          // locality: data[0].Locality,\n          // modifier: data[0].Modifier,\n          // opening_hours: data[0].Opening_hours,\n          // ph_descr: data[0].Ph_descr,\n          // ph_name: data[0].Ph_name,\n          // // photos: data[0].Photos,\n          // price1: data[0].Price1,\n          // price2: data[0].Price2,\n          // rating: data[0].Rating,\n          // status: data[0].Status,\n          // tc_descr: data[0].Tc_descr,\n          // tc_name: data[0].Tc_name,\n          // // updated_at: data[0].Updated_at,\n          // use_yn: data[0].Use_yn,\n          // user_ratings_total: data[0].User_ratings_total,\n          // website: data[0].Website\n          // category: data[0].CategoryNo,\n          // en_name: data[0].NameEn,\n          // kr_name: data[0].NameKr,\n          // cn_name: data[0].NameCn,\n          // tc_name: data[0].NameTc,\n          // fr_name: data[0].NameFr,\n          // jp_name: data[0].NameJp,\n          // ph_name: data[0].NamePh,\n          // en_descr: data[0].DesciptionEn,\n          // kr_descr: data[0].DescriptionKr,\n          // cn_descr: data[0].DescriptionCn,\n          // tc_descr: data[0].DescriptionTc,\n          // fr_descr: data[0].DescriptionFr,\n          // jp_descr: data[0].DescriptionJp,\n          // ph_descr: data[0].DescriptionPh,\n          // address: data[0].Address,\n          // latitude: data[0].Latitude,\n          // longitude: data[0].Longitude,\n          // CountryCode: data[0].CountryCode,\n          // PhoneNo: data[0].PhoneNo,\n          // Locality: data[0].Locality\n          category: data[0].CategoryNo,\n          en_name: data[0].NameEn,\n          kr_name: data[0].NameKr,\n          cn_name: data[0].NameCn,\n          tc_name: data[0].NameTc,\n          fr_name: data[0].NameFr,\n          jp_name: data[0].NameJp,\n          ph_name: data[0].NamePh,\n          en_descr: data[0].DescriptionEn,\n          kr_descr: data[0].DescriptionKr,\n          cn_descr: data[0].DescriptionCn,\n          tc_descr: data[0].DescriptionTc,\n          fr_descr: data[0].DescriptionFr,\n          jp_descr: data[0].DescriptionJp,\n          ph_descr: data[0].DescriptionPh,\n          address: data[0].Address,\n          latitude: data[0].Latitude,\n          longitude: data[0].Longitude,\n          country_code: data[0].CountryCode,\n          PhoneNo: data[0].PhoneNo,\n          Locality: data[0].Locality\n        }).then(function () {\n          alert(\"successfully uploaded!\");\n          console.log(\"Document successfully written!\");\n        }).catch(function (error) {\n          alert(error);\n          console.error(\"Error writing document: \", error);\n        });\n        console.log(\"000000000000000\", myDataStr);\n      }); // console.log(\">>>>>>>>>>>>>>>>>\", data)\n    };\n\n    if (rABS) {\n      reader.readAsBinaryString(this.state.file);\n    } else {\n      reader.readAsArrayBuffer(this.state.file);\n    }\n\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      id: \"file\",\n      accept: SheetJSFT,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      style: {\n        position: \"absolute\",\n        top: 163,\n        width: 100,\n        height: 37\n      },\n      color: \"primary\",\n      onClick: this.handleFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, \"Save\"));\n  }\n\n}\n\nexport default ExcelReader;","map":{"version":3,"sources":["C:/Users/maipc3/Desktop/branchfor2live/maiway-dev/src/components/Upload/ExcelReader.js"],"names":["React","Component","useState","useEffect","Firebase","XLSX","make_cols","SheetJSFT","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","createStyles","Grid","makeStyles","TextField","Theme","ExcelReader","constructor","props","state","handleFile","bind","handleChange","e","files","target","setState","file","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","read","type","bookVBA","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","cols","console","log","JSON","stringify","myDataStr","db","firestore","collection","doc","set","category","CategoryNo","en_name","NameEn","kr_name","NameKr","cn_name","NameCn","tc_name","NameTc","fr_name","NameFr","jp_name","NameJp","ph_name","NamePh","en_descr","DescriptionEn","kr_descr","DescriptionKr","cn_descr","DescriptionCn","tc_descr","DescriptionTc","fr_descr","DescriptionFr","jp_descr","DescriptionJp","ph_descr","DescriptionPh","address","Address","latitude","Latitude","longitude","Longitude","country_code","CountryCode","PhoneNo","Locality","then","alert","catch","error","readAsArrayBuffer","render","position","top","width","height"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport Firebase from 'firebase'\nimport XLSX from 'xlsx';\nimport { make_cols } from './MakeColumns';\nimport { SheetJSFT } from './types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {\n  Button,\n  createStyles,\n  Grid,\n  makeStyles,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\n\n\nclass ExcelReader extends Component {\n  constructor(props) {\n    super(props);\n    // this.ref = Firebase.firestore().collection(\"places\");\n    // this.unsubscribe = null;\n    this.state = {\n\n\n    }\n    \n    this.handleFile = this.handleFile.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n \n  handleChange(e) {\n    const files = e.target.files;\n    if (files && files[0]) this.setState({ file: files[0] });\n  };\n\n  handleFile() {\n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n \n    reader.onload = (e) => {\n      ///// Parse data \n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array', bookVBA : true });\n      ///// Get first worksheet \n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      //// Convert array of arrays\n      const data = XLSX.utils.sheet_to_json(ws);\n      //// Update state \n      this.setState({ data: data, cols: make_cols(ws['!ref']) }, () => {\n        console.log(JSON.stringify(this.state.data, null, 2));\n        \n      // const myDataStr = data.toString();\n      // const test = Object.values( data );\n      const myDataStr = JSON.stringify(data);  \n      \n      console.log(\">>>>>>>>>\", myDataStr);\n      const db = Firebase.firestore();\n      db.collection(\"places\").doc().set({\n        \n        // address: data[0].Address,\n        // business_status: data[0].Business_status,\n        // category: data[0].CategoryNo,\n        // cn_descr: data[0].Cn_descr,\n        // cn_name: data[0].Cn_name,\n        // country_code: data[0].Country_code,\n        // created_at: data[0].Created_at,\n        // creator: data[0].Creator,\n        // currency: data[0].Currency,\n        // en_descr: data[0].En_descr,\n        // en_name: data[0].En_name,\n        // formatted_phone_number: data[0].Formatted_phone_number,\n        // fr_descr: data[0].Fr_descr,\n        // fr_name: data[0].fr_name,\n        // geo: data[0].Geo_location,\n        // guide_id: data[0].Guide_id,\n        // is_featured: data[0].Is_featured,\n        // jp_descr: data[0].Jp_descr,\n        // jp_Name: data[0].Jp_name,\n        // kr_descr: data[0].Kr_descr,\n        // kr_name: data[0].Kr_name,\n        // locality: data[0].Locality,\n        // modifier: data[0].Modifier,\n        // opening_hours: data[0].Opening_hours,\n        // ph_descr: data[0].Ph_descr,\n        // ph_name: data[0].Ph_name,\n        // // photos: data[0].Photos,\n        // price1: data[0].Price1,\n        // price2: data[0].Price2,\n        // rating: data[0].Rating,\n        // status: data[0].Status,\n        // tc_descr: data[0].Tc_descr,\n        // tc_name: data[0].Tc_name,\n        // // updated_at: data[0].Updated_at,\n        // use_yn: data[0].Use_yn,\n        // user_ratings_total: data[0].User_ratings_total,\n        // website: data[0].Website\n\n        // category: data[0].CategoryNo,\n        // en_name: data[0].NameEn,\n        // kr_name: data[0].NameKr,\n        // cn_name: data[0].NameCn,\n        // tc_name: data[0].NameTc,\n        // fr_name: data[0].NameFr,\n        // jp_name: data[0].NameJp,\n        // ph_name: data[0].NamePh,\n\n        // en_descr: data[0].DesciptionEn,\n        // kr_descr: data[0].DescriptionKr,\n        // cn_descr: data[0].DescriptionCn,\n        // tc_descr: data[0].DescriptionTc,\n        // fr_descr: data[0].DescriptionFr,\n        // jp_descr: data[0].DescriptionJp,\n        // ph_descr: data[0].DescriptionPh,\n\n        // address: data[0].Address,\n        // latitude: data[0].Latitude,\n        // longitude: data[0].Longitude,\n        // CountryCode: data[0].CountryCode,\n        // PhoneNo: data[0].PhoneNo,\n        // Locality: data[0].Locality\n\n\n        category: data[0].CategoryNo,\n        en_name: data[0].NameEn,\n        kr_name: data[0].NameKr,\n        cn_name: data[0].NameCn,\n        tc_name: data[0].NameTc,\n        fr_name: data[0].NameFr,\n        jp_name: data[0].NameJp,\n        ph_name: data[0].NamePh,\n        en_descr: data[0].DescriptionEn,\n        kr_descr: data[0].DescriptionKr,\n        cn_descr: data[0].DescriptionCn,\n        tc_descr: data[0].DescriptionTc,\n        fr_descr: data[0].DescriptionFr,\n        jp_descr: data[0].DescriptionJp,\n        ph_descr: data[0].DescriptionPh,\n        address: data[0].Address,\n        latitude: data[0].Latitude,\n        longitude: data[0].Longitude,\n        country_code: data[0].CountryCode,\n        PhoneNo: data[0].PhoneNo,\n        Locality: data[0].Locality\n        \n\n\n      })\n      .then(function() {\n            alert(\"successfully uploaded!\");\n            console.log(\"Document successfully written!\");\n        })\n        .catch(function(error) {\n            alert(error);\n            console.error(\"Error writing document: \", error);\n        });\n        console.log(\"000000000000000\",  myDataStr);\n      });\n      \n      // console.log(\">>>>>>>>>>>>>>>>>\", data)\n    };\n  \n    if (rABS) {\n      reader.readAsBinaryString(this.state.file);\n    } else {\n      reader.readAsArrayBuffer(this.state.file);\n    };\n  }\n \n  render() {\n    return (\n      <div>\n        {/* <Grid item xs={12}>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleFile}>\n              Image\n            </Button>\n            <input type=\"file\" className=\"form-control\" id=\"file\" accept={SheetJSFT} onChange={this.handleChange} />\n          </Grid> */}\n\n\n        <label htmlFor=\"file\"></label>\n        <br />\n        <input type=\"file\" className=\"form-control\" id=\"file\" accept={SheetJSFT} onChange={this.handleChange} />\n        <br />\n        <br />\n  \n        {/* <input type='submit' \n          value=\"Save\"\n          onClick={this.handleFile} /> */}\n\n            <Button variant=\"contained\"  style={{position:\"absolute\", top:163, width:100, height: 37}} color=\"primary\" onClick={this.handleFile}>\n              Save\n            </Button>\n      </div>\n        \n    )\n  }\n}\n \nexport default ExcelReader;"]},"metadata":{},"sourceType":"module"}