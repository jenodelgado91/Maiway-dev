{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maipc3\\\\Desktop\\\\branchfor2live\\\\maiway-dev\\\\src\\\\components\\\\Places\\\\BasicTab.tsx\";\nimport { Button, createStyles, Grid, makeStyles, TextField } from \"@material-ui/core\";\nimport React, { useRef, useState } from \"react\";\nimport { CmmnSelect, CommonPopup, MapContainer2, OpeningHours } from \"../commons\";\nimport SingleLineGridList from \"../commons/SingleLineGridImg\";\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    maxHeight: 220\n  },\n  customButton2: {\n    width: \"8vw\",\n    minWidth: \"80px\",\n    height: \"3.5vh\",\n    marginLeft: theme.spacing(1)\n  },\n  gridCustom: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  }\n}));\n\nfunction BasicTab({\n  commonList,\n  country,\n  category,\n  address,\n  latitude,\n  longitude,\n  currency,\n  attachment,\n  opening_hours,\n  handleCountryChange,\n  handleCategoryChange,\n  onChange,\n  onLatLngChang,\n  handleClearMap,\n  addImg,\n  deleteImg\n}) {\n  const classes = useStyles();\n  const [latLng, setLatLng] = useState({\n    lat: \"\",\n    lng: \"\"\n  });\n  const [openMap, setOpenMap] = useState(false);\n  const fileRef = useRef();\n\n  const onSelectCountryChange = ev => {\n    handleCountryChange(ev);\n  };\n\n  const onSelectCategoryChange = ev => {\n    handleCategoryChange(ev);\n  };\n\n  const onTextChange = ev => {\n    onChange(ev);\n  };\n\n  const setOpenMapDefault = () => {\n    const selCountry = commonList[\"country\"].filter(ctry => ctry.Ctry_Code === country);\n    const arrLatLng = selCountry[0].Ctry_Latlng.split(\",\");\n    arrLatLng && setLatLng({\n      lat: parseFloat(arrLatLng[0]),\n      lng: parseFloat(arrLatLng[1])\n    });\n    arrLatLng && setOpenMap(true);\n  };\n  /**\n   * map 팝업 open\n   */\n\n\n  const handleOpenMap = () => {\n    if (latitude && longitude) {\n      setOpenMapDefault();\n    } else if (!country || country === \"Select\") {\n      alert(\"first select country\");\n    } else {\n      setOpenMapDefault();\n    }\n  };\n\n  const onClearButtonClick = () => {\n    handleClearMap();\n  };\n  /**\n   * map 팝업 close\n   */\n\n\n  const handleCloseMap = params => {\n    // params.key && updatePage(params);\n    setOpenMap(false);\n  };\n\n  const onLatLngChang2 = (latLng, address) => {\n    // console.log(latLng);\n    // setInputs((prevState) => ({\n    //   ...prevState,\n    //   latitude: latLng.lat,\n    //   longitude: latLng.lng,\n    //   address,\n    // }));\n    onLatLngChang(latLng, address);\n    setOpenMap(false);\n  };\n  /**\n   * 파일 추가 버튼\n   * @desc input file 버튼 실행\n   */\n\n\n  const handleAddFile = () => {\n    fileRef.current.click();\n  };\n  /**\n   * 파일 추가 input  hidden\n   */\n\n\n  const handleAttachFile = ev => {\n    const target = ev.target;\n    const {\n      files\n    } = target;\n\n    if (files) {\n      Array.prototype.forEach.call(files, file => {\n        const ext = file.type.split(\"/\")[1];\n        const reader = new FileReader();\n\n        reader.onloadend = finishedEvent => {\n          const currentTarget = finishedEvent.currentTarget;\n          const {\n            result\n          } = currentTarget;\n          result && addImg([{\n            img: result.toString(),\n            ext,\n            isNew: true\n          }]);\n        };\n\n        if (Boolean(file)) {\n          reader.readAsDataURL(file);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.gridCustom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CmmnSelect, {\n    label: \"Country\",\n    value: country || \"Select\",\n    firstItem: \"Select\",\n    itemList: commonList && commonList[\"country\"],\n    keyValue: {\n      key: \"Ctry_Code\",\n      value: \"Ctry_Name\"\n    },\n    onChange: onSelectCountryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"currency\",\n    label: \"currency\",\n    fullWidth: true,\n    value: currency,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CmmnSelect, {\n    label: \"Category\",\n    value: category || \"Select\",\n    firstItem: \"Select\",\n    itemList: commonList && commonList[\"category\"],\n    keyValue: {\n      key: \"category_cd\",\n      value: \"category_nm\"\n    },\n    onChange: onSelectCategoryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"address\",\n    name: \"address\",\n    label: \"Address\",\n    fullWidth: true,\n    value: address,\n    onChange: onTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.gridCustom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    id: \"latitude\",\n    name: \"latitude\",\n    label: \"Latitude\",\n    fullWidth: true,\n    value: latitude,\n    onChange: onTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    id: \"longitude\",\n    name: \"longitude\",\n    label: \"Longitude\",\n    fullWidth: true,\n    value: longitude,\n    onChange: onTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.customButton2,\n    onClick: handleOpenMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, \"Spot\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.customButton2,\n    onClick: onClearButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, \"Clear\")), /*#__PURE__*/React.createElement(OpeningHours, {\n    opening_hours: opening_hours,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.gridCustom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleAddFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    multiple: true,\n    accept: \"image/*\",\n    style: {\n      display: \"none\"\n    },\n    onChange: handleAttachFile,\n    ref: fileRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  })), attachment && /*#__PURE__*/React.createElement(SingleLineGridList, {\n    imgList: attachment,\n    deleteImg: deleteImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }) // attachment.map((img) => (\n  //   <div key={img.img}>\n  //     <img src={img.img} style={{ width: 100, height: 100 }} />\n  //   </div>\n  // ))\n  )), /*#__PURE__*/React.createElement(CommonPopup, {\n    width: \"460px\",\n    height: \"650px\",\n    open: openMap,\n    handleClose: handleCloseMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MapContainer2, {\n    width: \"460px\",\n    height: \"450px\",\n    latitude: latitude,\n    longitude: longitude,\n    defaultLatLng: latLng,\n    onLatLngChang: onLatLngChang2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default BasicTab;","map":{"version":3,"sources":["C:/Users/maipc3/Desktop/branchfor2live/maiway-dev/src/components/Places/BasicTab.tsx"],"names":["Button","createStyles","Grid","makeStyles","TextField","React","useRef","useState","CmmnSelect","CommonPopup","MapContainer2","OpeningHours","SingleLineGridList","useStyles","theme","container","maxHeight","customButton2","width","minWidth","height","marginLeft","spacing","gridCustom","display","justifyContent","alignItems","BasicTab","commonList","country","category","address","latitude","longitude","currency","attachment","opening_hours","handleCountryChange","handleCategoryChange","onChange","onLatLngChang","handleClearMap","addImg","deleteImg","classes","latLng","setLatLng","lat","lng","openMap","setOpenMap","fileRef","onSelectCountryChange","ev","onSelectCategoryChange","onTextChange","setOpenMapDefault","selCountry","filter","ctry","Ctry_Code","arrLatLng","Ctry_Latlng","split","parseFloat","handleOpenMap","alert","onClearButtonClick","handleCloseMap","params","onLatLngChang2","handleAddFile","current","click","handleAttachFile","target","files","Array","prototype","forEach","call","file","ext","type","reader","FileReader","onloadend","finishedEvent","currentTarget","result","img","toString","isNew","Boolean","readAsDataURL","key","value"],"mappings":"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","sourcesContent":["import {\n  Button,\n  createStyles,\n  Grid,\n  makeStyles,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { useRef, useState } from \"react\";\nimport {\n  CmmnSelect,\n  CommonPopup,\n  MapContainer2,\n  OpeningHours,\n} from \"../commons\";\nimport SingleLineGridList from \"../commons/SingleLineGridImg\";\nimport { AttachmentType } from \"./PlacesPopup\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      maxHeight: 220,\n    },\n    customButton2: {\n      width: \"8vw\",\n      minWidth: \"80px\",\n      height: \"3.5vh\",\n      marginLeft: theme.spacing(1),\n    },\n    gridCustom: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n  })\n);\n\ninterface BasicTabProps {\n  commonList: any;\n  country: string;\n  category: number | string;\n  address: string;\n  latitude: string;\n  longitude: string;\n  currency: string;\n  attachment: AttachmentType[] | null;\n  opening_hours: string[];\n  handleCountryChange: (ev: React.ChangeEvent<{ value: unknown }>) => void;\n  handleCategoryChange: (ev: React.ChangeEvent<{ value: unknown }>) => void;\n  onChange: (ev: React.ChangeEvent<HTMLInputElement>) => void;\n  onLatLngChang: (latLng: any, address: string) => void;\n  handleClearMap: () => void;\n  addImg: (newImg: AttachmentType[]) => void;\n  deleteImg: (args: any) => void;\n}\n\nfunction BasicTab({\n  commonList,\n  country,\n  category,\n  address,\n  latitude,\n  longitude,\n  currency,\n  attachment,\n  opening_hours,\n  handleCountryChange,\n  handleCategoryChange,\n  onChange,\n  onLatLngChang,\n  handleClearMap,\n  addImg,\n  deleteImg,\n}: BasicTabProps) {\n  const classes = useStyles();\n  const [latLng, setLatLng] = useState<any>({ lat: \"\", lng: \"\" });\n  const [openMap, setOpenMap] = useState(false);\n  const fileRef = useRef<any>();\n\n  const onSelectCountryChange = (ev: React.ChangeEvent<{ value: unknown }>) => {\n    handleCountryChange(ev);\n  };\n\n  const onSelectCategoryChange = (\n    ev: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    handleCategoryChange(ev);\n  };\n\n  const onTextChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(ev);\n  };\n\n  const setOpenMapDefault = () => {\n    const selCountry = commonList[\"country\"].filter(\n      (ctry: any) => ctry.Ctry_Code === country\n    );\n\n    const arrLatLng = selCountry[0].Ctry_Latlng.split(\",\");\n\n    arrLatLng &&\n      setLatLng({\n        lat: parseFloat(arrLatLng[0]),\n        lng: parseFloat(arrLatLng[1]),\n      });\n    arrLatLng && setOpenMap(true);\n  };\n\n  /**\n   * map 팝업 open\n   */\n  const handleOpenMap = () => {\n    if (latitude && longitude) {\n      setOpenMapDefault();\n    } else if (!country || country === \"Select\") {\n      alert(\"first select country\");\n    } else {\n      setOpenMapDefault();\n    }\n  };\n\n  const onClearButtonClick = () => {\n    handleClearMap();\n  };\n\n  /**\n   * map 팝업 close\n   */\n  const handleCloseMap = (params: any) => {\n    // params.key && updatePage(params);\n    setOpenMap(false);\n  };\n\n  const onLatLngChang2 = (latLng: any, address: string) => {\n    // console.log(latLng);\n    // setInputs((prevState) => ({\n    //   ...prevState,\n    //   latitude: latLng.lat,\n    //   longitude: latLng.lng,\n    //   address,\n    // }));\n    onLatLngChang(latLng, address);\n    setOpenMap(false);\n  };\n\n  /**\n   * 파일 추가 버튼\n   * @desc input file 버튼 실행\n   */\n  const handleAddFile = () => {\n    fileRef.current.click();\n  };\n\n  /**\n   * 파일 추가 input  hidden\n   */\n  const handleAttachFile = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const target = ev.target as HTMLInputElement;\n    const { files } = target;\n    if (files) {\n      Array.prototype.forEach.call(files, (file: File) => {\n        const ext = file.type.split(\"/\")[1];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent: ProgressEvent<FileReader>) => {\n          const currentTarget = finishedEvent.currentTarget as FileReader;\n          const { result } = currentTarget;\n          result && addImg([{ img: result.toString(), ext, isNew: true }]);\n        };\n        if (Boolean(file)) {\n          reader.readAsDataURL(file);\n        }\n      });\n    }\n  };\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Grid item xs={12} className={classes.gridCustom}>\n            <CmmnSelect\n              label=\"Country\"\n              value={country || \"Select\"}\n              firstItem=\"Select\"\n              itemList={commonList && commonList[\"country\"]}\n              keyValue={{ key: \"Ctry_Code\", value: \"Ctry_Name\" }}\n              onChange={onSelectCountryChange}\n            />\n            <TextField\n              name=\"currency\"\n              label=\"currency\"\n              fullWidth\n              value={currency}\n              disabled\n            />\n            <CmmnSelect\n              label=\"Category\"\n              value={category || \"Select\"}\n              firstItem=\"Select\"\n              itemList={commonList && commonList[\"category\"]}\n              keyValue={{ key: \"category_cd\", value: \"category_nm\" }}\n              onChange={onSelectCategoryChange}\n            />\n          </Grid>\n\n          <TextField\n            required\n            id=\"address\"\n            name=\"address\"\n            label=\"Address\"\n            fullWidth\n            value={address}\n            onChange={onTextChange}\n          />\n          <Grid item xs={12} className={classes.gridCustom}>\n            <TextField\n              disabled\n              id=\"latitude\"\n              name=\"latitude\"\n              label=\"Latitude\"\n              fullWidth\n              value={latitude}\n              onChange={onTextChange}\n            />\n            <TextField\n              disabled\n              id=\"longitude\"\n              name=\"longitude\"\n              label=\"Longitude\"\n              fullWidth\n              value={longitude}\n              onChange={onTextChange}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.customButton2}\n              onClick={handleOpenMap}\n            >\n              Spot\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.customButton2}\n              onClick={onClearButtonClick}\n            >\n              Clear\n            </Button>\n          </Grid>\n          <OpeningHours opening_hours={opening_hours} />\n          <Grid item xs={12} className={classes.gridCustom}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAddFile}>\n              Image\n            </Button>\n            <input\n              type=\"file\"\n              multiple\n              accept=\"image/*\"\n              style={{ display: \"none\" }}\n              onChange={handleAttachFile}\n              ref={fileRef}\n            />\n          </Grid>\n          {\n            attachment && (\n              <SingleLineGridList imgList={attachment} deleteImg={deleteImg} />\n            )\n            // attachment.map((img) => (\n            //   <div key={img.img}>\n            //     <img src={img.img} style={{ width: 100, height: 100 }} />\n            //   </div>\n            // ))\n          }\n        </Grid>\n      </Grid>\n      <CommonPopup\n        width={\"460px\"}\n        height={\"650px\"}\n        open={openMap}\n        handleClose={handleCloseMap}\n      >\n        <MapContainer2\n          width={\"460px\"}\n          height={\"450px\"}\n          latitude={latitude}\n          longitude={longitude}\n          defaultLatLng={latLng}\n          onLatLngChang={onLatLngChang2}\n        />\n      </CommonPopup>\n    </>\n  );\n}\n\nexport default BasicTab;\n"]},"metadata":{},"sourceType":"module"}