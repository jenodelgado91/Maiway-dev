{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maipc3\\\\Desktop\\\\branchfor2live\\\\maiway-dev\\\\src\\\\components\\\\commons\\\\OpeningHours.tsx\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { TextField, Typography } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  textField: {\n    width: 120,\n    fontSize: \"0.8rem\"\n  }\n});\nconst columns = [{\n  id: \"No\",\n  align: \"center\",\n  label: \"Time\"\n}, {\n  id: \"Monday\",\n  align: \"center\",\n  label: \"Mon\"\n}, {\n  id: \"Tuesday\",\n  align: \"center\",\n  label: \"tue\"\n}, {\n  id: \"Wednesday\",\n  align: \"center\",\n  label: \"Wed\"\n}, {\n  id: \"Thursday\",\n  align: \"center\",\n  label: \"Thu\"\n}, {\n  id: \"Friday\",\n  align: \"center\",\n  label: \"Fri\"\n}, {\n  id: \"Saturday\",\n  align: \"center\",\n  label: \"Sat\"\n}, {\n  id: \"Sunday\",\n  align: \"center\",\n  label: \"Sun\"\n}];\nlet rows = [{\n  No: \"Open\",\n  Monday: \"\",\n  Tuesday: \"\",\n  Wednesday: \"\",\n  Thursday: \"\",\n  Friday: \"\",\n  Saturday: \"\",\n  Sunday: \"\"\n}, {\n  No: \"Close\",\n  Monday: \"\",\n  Tuesday: \"\",\n  Wednesday: \"\",\n  Thursday: \"\",\n  Friday: \"\",\n  Saturday: \"\",\n  Sunday: \"\"\n}];\n\nfunction padLeftZero(str) {\n  if (str < 10) {\n    return `0${str}`;\n  }\n\n  return `${str}`;\n}\n\nfunction transTime(time) {\n  const arrTime = time.split(\":\");\n  let hour = parseInt(arrTime[0], 10);\n\n  if (hour >= 12) {\n    hour = hour - 12;\n    return `${padLeftZero(hour)}:${arrTime[1]}PM`;\n  } else {\n    return `${time}AM`;\n  }\n}\n\nfunction OpeningHours({\n  opening_hours\n}) {\n  const classes = useStyles();\n  const arrHours = opening_hours[0].split(\",\");\n\n  if (arrHours.length > 1) {\n    arrHours.forEach(openingHour => {\n      openingHour = openingHour.trim();\n      const arrOpen = openingHour.split(\"(\");\n      const dayOfWeek = arrOpen[0].trim();\n      const arrTime = arrOpen[1].replace(\")\", \"\").split(\"-\");\n      let openTime = arrTime[0].trim().replace(\"AM\", \"\");\n      let closeTime = arrTime[1].trim().replace(\"AM\", \"\");\n\n      if (openTime.indexOf(\"PM\") !== -1) {\n        const arrOpenTime = openTime.replace(\"PM\", \"\").split(\":\");\n        openTime = `${(parseInt(arrOpenTime[0], 10) + 12).toString()}:${arrOpenTime[1]}`;\n      }\n\n      if (closeTime.indexOf(\"PM\") !== -1) {\n        const arrCloseTime = closeTime.replace(\"PM\", \"\").split(\":\");\n        closeTime = `${(parseInt(arrCloseTime[0], 10) + 12).toString()}:${arrCloseTime[1]}`;\n      }\n\n      rows[0][dayOfWeek] = openTime.toString();\n      rows[1][dayOfWeek] = closeTime.toString();\n    });\n  }\n\n  const timeOnChange = (ev, rowIdx, key) => {\n    // console.log(ev.currentTarget.value, rowIdx, key);\n    rows[rowIdx][key] = ev.currentTarget.value;\n    const keys = Object.keys(rows[0]); // console.log(keys);\n\n    let result = \"\";\n\n    for (let i = 1; i < keys.length; i++) {\n      if (rows[0][keys[i]] !== \"\" && rows[1][keys[i]] !== \"\") {\n        result += `${result === \"\" ? \"\" : \", \"}${keys[i]} (${transTime(rows[0][keys[i]])} - ${transTime(rows[1][keys[i]])})`;\n      }\n    }\n\n    console.log(result);\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, \"Opening hours\"), /*#__PURE__*/React.createElement(TableContainer, {\n    style: {\n      maxHeight: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, rows.map((row, rowIdx) => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      tabIndex: -1,\n      key: row.No,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n      key: column.id,\n      align: column.align,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, column.id === \"No\" ? /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      style: {\n        width: 60\n      },\n      value: row[column.id],\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(TextField, {\n      type: \"time\",\n      defaultValue: row[column.id],\n      className: classes.textField,\n      disabled: true,\n      InputLabelProps: {\n        shrink: true\n      },\n      inputProps: {\n        step: 300 // 5 min\n\n      },\n      onChange: ev => timeOnChange(ev, rowIdx, column.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }))));\n  })))));\n}\n\nexport default OpeningHours;","map":{"version":3,"sources":["C:/Users/maipc3/Desktop/branchfor2live/maiway-dev/src/components/commons/OpeningHours.tsx"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Typography","useStyles","root","width","textField","fontSize","columns","id","align","label","rows","No","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","padLeftZero","str","transTime","time","arrTime","split","hour","parseInt","OpeningHours","opening_hours","classes","arrHours","length","forEach","openingHour","trim","arrOpen","dayOfWeek","replace","openTime","closeTime","indexOf","arrOpenTime","toString","arrCloseTime","timeOnChange","ev","rowIdx","key","currentTarget","value","keys","Object","result","i","console","log","maxHeight","map","column","minWidth","row","shrink","step"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { TextField, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  textField: {\n    width: 120,\n    fontSize: \"0.8rem\",\n  },\n});\n\nconst columns = [\n  { id: \"No\", align: \"center\", label: \"Time\" },\n  { id: \"Monday\", align: \"center\", label: \"Mon\" },\n  {\n    id: \"Tuesday\",\n    align: \"center\",\n    label: \"tue\",\n  },\n  {\n    id: \"Wednesday\",\n    align: \"center\",\n    label: \"Wed\",\n  },\n  {\n    id: \"Thursday\",\n    align: \"center\",\n    label: \"Thu\",\n  },\n  { id: \"Friday\", align: \"center\", label: \"Fri\" },\n  {\n    id: \"Saturday\",\n    align: \"center\",\n    label: \"Sat\",\n  },\n  { id: \"Sunday\", align: \"center\", label: \"Sun\" },\n];\nlet rows: any = [\n  {\n    No: \"Open\",\n    Monday: \"\",\n    Tuesday: \"\",\n    Wednesday: \"\",\n    Thursday: \"\",\n    Friday: \"\",\n    Saturday: \"\",\n    Sunday: \"\",\n  },\n  {\n    No: \"Close\",\n    Monday: \"\",\n    Tuesday: \"\",\n    Wednesday: \"\",\n    Thursday: \"\",\n    Friday: \"\",\n    Saturday: \"\",\n    Sunday: \"\",\n  },\n];\n\nfunction padLeftZero(str: number) {\n  if (str < 10) {\n    return `0${str}`;\n  }\n  return `${str}`;\n}\nfunction transTime(time: string) {\n  const arrTime = time.split(\":\");\n  let hour = parseInt(arrTime[0], 10);\n  if (hour >= 12) {\n    hour = hour - 12;\n    return `${padLeftZero(hour)}:${arrTime[1]}PM`;\n  } else {\n    return `${time}AM`;\n  }\n}\ninterface OpeningHoursProps {\n  opening_hours: string[];\n}\nfunction OpeningHours({ opening_hours }: OpeningHoursProps) {\n  const classes = useStyles();\n\n  const arrHours = opening_hours[0].split(\",\");\n  if (arrHours.length > 1) {\n    arrHours.forEach((openingHour) => {\n      openingHour = openingHour.trim();\n      const arrOpen = openingHour.split(\"(\");\n      const dayOfWeek = arrOpen[0].trim();\n      const arrTime = arrOpen[1].replace(\")\", \"\").split(\"-\");\n      let openTime: string | number = arrTime[0].trim().replace(\"AM\", \"\");\n      let closeTime: string | number = arrTime[1].trim().replace(\"AM\", \"\");\n\n      if (openTime.indexOf(\"PM\") !== -1) {\n        const arrOpenTime = openTime.replace(\"PM\", \"\").split(\":\");\n        openTime = `${(parseInt(arrOpenTime[0], 10) + 12).toString()}:${\n          arrOpenTime[1]\n        }`;\n      }\n      if (closeTime.indexOf(\"PM\") !== -1) {\n        const arrCloseTime = closeTime.replace(\"PM\", \"\").split(\":\");\n        closeTime = `${(parseInt(arrCloseTime[0], 10) + 12).toString()}:${\n          arrCloseTime[1]\n        }`;\n      }\n      rows[0][dayOfWeek] = openTime.toString();\n      rows[1][dayOfWeek] = closeTime.toString();\n    });\n  }\n\n  const timeOnChange = (ev: any, rowIdx: number, key: string) => {\n    // console.log(ev.currentTarget.value, rowIdx, key);\n    rows[rowIdx][key] = ev.currentTarget.value;\n    const keys = Object.keys(rows[0]);\n    // console.log(keys);\n    let result = \"\";\n    for (let i = 1; i < keys.length; i++) {\n      if (rows[0][keys[i]] !== \"\" && rows[1][keys[i]] !== \"\") {\n        result += `${result === \"\" ? \"\" : \", \"}${keys[i]} (${transTime(\n          rows[0][keys[i]]\n        )} - ${transTime(rows[1][keys[i]])})`;\n      }\n    }\n    console.log(result);\n  };\n  return (\n    <Paper className={classes.root}>\n      <Typography>Opening hours</Typography>\n      <TableContainer style={{ maxHeight: 300 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column: any) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row: any, rowIdx: number) => {\n              return (\n                <TableRow hover tabIndex={-1} key={row.No}>\n                  {columns.map((column: any) => (\n                    <TableCell key={column.id} align={column.align}>\n                      {column.id === \"No\" ? (\n                        <TextField\n                          type=\"text\"\n                          style={{ width: 60 }}\n                          value={row[column.id]}\n                          disabled\n                        />\n                      ) : (\n                        <TextField\n                          type=\"time\"\n                          defaultValue={row[column.id]}\n                          className={classes.textField}\n                          disabled\n                          InputLabelProps={{\n                            shrink: true,\n                          }}\n                          inputProps={{\n                            step: 300, // 5 min\n                          }}\n                          onChange={(ev: any) =>\n                            timeOnChange(ev, rowIdx, column.id)\n                          }\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n}\n\nexport default OpeningHours;\n"]},"metadata":{},"sourceType":"module"}