{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maipc3\\\\Desktop\\\\branchfor2live\\\\maiway-dev\\\\src\\\\components\\\\commons\\\\MapContainer2.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport \"dotenv/config\";\nimport { Button, Grid, TextField } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport Axios from \"axios\";\nconst MAP_APIKEY = `${process.env.REACT_APP_MAP_API_KEY}`;\nconst GEOCODING_APIKEY = `${process.env.REACT_APP_GEOCODING_API_KEY}`;\nconst K_MARGIN_TOP = 30;\nconst K_MARGIN_RIGHT = 30;\nconst K_MARGIN_BOTTOM = 30;\nconst K_MARGIN_LEFT = 30;\nconst K_HOVER_DISTANCE = 30;\nconst useStyles = makeStyles(theme => createStyles({\n  customButton2: {\n    width: \"8vw\",\n    minWidth: \"80px\",\n    height: \"3.5vh\",\n    marginLeft: theme.spacing(1),\n    marginTop: theme.spacing(1)\n  },\n  bottom: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\"\n  }\n}));\n\nconst AnyReactComponent = ({\n  text\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    backgroundColor: \"blue\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(LocationOnIcon, {\n  style: {\n    color: \"red\",\n    fontSize: \"3.5em\",\n    marginLeft: \"-0.5em\",\n    marginTop: \"-1.2em\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }\n}));\n\nconst center = {\n  lat: 14.581137,\n  lng: 121.163718\n};\n\nfunction MapContainer2({\n  width,\n  height,\n  latitude,\n  longitude,\n  defaultLatLng,\n  onLatLngChang\n}) {\n  const classes = useStyles();\n  const [latLng, setLatLng] = useState(null);\n  const [dLatLng, setDlatLng] = useState(null);\n  const [address, setAddress] = useState(\"\");\n  useEffect(() => {\n    latitude = latitude && parseFloat(latitude) || null;\n    longitude = longitude && parseFloat(longitude) || null;\n\n    if (latitude) {\n      defaultLatLng.lat = latitude;\n      defaultLatLng.lng = longitude;\n    }\n\n    setLatLng({\n      lat: latitude,\n      lng: longitude\n    });\n    setDlatLng({\n      lat: defaultLatLng.lat,\n      lng: defaultLatLng.lng\n    });\n    getAddress({\n      lat: latitude,\n      lng: longitude\n    });\n  }, []);\n\n  const handleOnClick = event => {\n    const {\n      lat,\n      lng\n    } = event; // console.log(event);\n\n    setLatLng({\n      lat: parseFloat(lat.toFixed(6)),\n      lng: parseFloat(lng.toFixed(6))\n    });\n    getAddress({\n      lat,\n      lng\n    });\n  };\n\n  const handelOnChangeLanLng = () => {\n    latLng && onLatLngChang(latLng, address);\n  };\n\n  const handleOnChildClick = (hoverKey, childProps) => {// console.log(hoverKey);\n    // console.log(childProps);\n  };\n\n  const getAddress = async ({\n    lat,\n    lng\n  }) => {\n    const result = await Axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${GEOCODING_APIKEY}`);\n    const {\n      data: {\n        results\n      }\n    } = result;\n    const {\n      formatted_address\n    } = results[0];\n    setAddress(formatted_address || \"\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height,\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, dLatLng && /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: MAP_APIKEY\n    },\n    defaultCenter: {\n      lat: dLatLng.lat,\n      lng: dLatLng.lng\n    },\n    defaultZoom: 11,\n    yesIWantToUseGoogleMapApiInternals: true,\n    onClick: handleOnClick,\n    onChildClick: handleOnChildClick // margin={[\n    //   K_MARGIN_TOP,\n    //   K_MARGIN_RIGHT,\n    //   K_MARGIN_BOTTOM,\n    //   K_MARGIN_LEFT,\n    // ]}\n    // hoverDistance={K_HOVER_DISTANCE}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, latLng && /*#__PURE__*/React.createElement(AnyReactComponent, {\n    lat: latLng.lat,\n    lng: latLng.lng,\n    text: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    id: \"latitude\",\n    name: \"latitude\",\n    label: \"Latitude\",\n    fullWidth: true,\n    value: (latLng === null || latLng === void 0 ? void 0 : latLng.lat) || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    id: \"longitude\",\n    name: \"longitude\",\n    label: \"Longitude\",\n    fullWidth: true,\n    placeholder: \"longitude\",\n    value: (latLng === null || latLng === void 0 ? void 0 : latLng.lng) || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.customButton2,\n    onClick: handelOnChangeLanLng,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \"Confirm\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"address\",\n    name: \"address\",\n    label: \"Address\",\n    fullWidth: true,\n    value: address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default React.memo(MapContainer2);","map":{"version":3,"sources":["C:/Users/maipc3/Desktop/branchfor2live/maiway-dev/src/components/commons/MapContainer2.tsx"],"names":["React","useEffect","useState","GoogleMapReact","LocationOnIcon","Button","Grid","TextField","makeStyles","createStyles","Axios","MAP_APIKEY","process","env","REACT_APP_MAP_API_KEY","GEOCODING_APIKEY","REACT_APP_GEOCODING_API_KEY","K_MARGIN_TOP","K_MARGIN_RIGHT","K_MARGIN_BOTTOM","K_MARGIN_LEFT","K_HOVER_DISTANCE","useStyles","theme","customButton2","width","minWidth","height","marginLeft","spacing","marginTop","bottom","display","justifyContent","alignItems","AnyReactComponent","text","backgroundColor","color","fontSize","center","lat","lng","MapContainer2","latitude","longitude","defaultLatLng","onLatLngChang","classes","latLng","setLatLng","dLatLng","setDlatLng","address","setAddress","parseFloat","getAddress","handleOnClick","event","toFixed","handelOnChangeLanLng","handleOnChildClick","hoverKey","childProps","result","get","data","results","formatted_address","key","memo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport \"dotenv/config\";\nimport { Button, CardContent, Grid, TextField } from \"@material-ui/core\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Axios from \"axios\";\n\nconst MAP_APIKEY = `${process.env.REACT_APP_MAP_API_KEY}`;\nconst GEOCODING_APIKEY = `${process.env.REACT_APP_GEOCODING_API_KEY}`;\n\nconst K_MARGIN_TOP = 30;\nconst K_MARGIN_RIGHT = 30;\nconst K_MARGIN_BOTTOM = 30;\nconst K_MARGIN_LEFT = 30;\n\nconst K_HOVER_DISTANCE = 30;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    customButton2: {\n      width: \"8vw\",\n      minWidth: \"80px\",\n      height: \"3.5vh\",\n      marginLeft: theme.spacing(1),\n      marginTop: theme.spacing(1),\n    },\n    bottom: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      alignItems: \"flex-end\",\n    },\n  })\n);\n\nconst AnyReactComponent = ({ text }: any) => (\n  <div style={{ backgroundColor: \"blue\" }}>\n    <LocationOnIcon\n      style={{\n        color: \"red\",\n        fontSize: \"3.5em\",\n        marginLeft: \"-0.5em\",\n        marginTop: \"-1.2em\",\n      }}\n    />\n  </div>\n);\n\nconst center = {\n  lat: 14.581137,\n  lng: 121.163718,\n};\n\ninterface LatLngProps {\n  lat: number;\n  lng: number;\n}\n\nfunction MapContainer2({\n  width,\n  height,\n  latitude,\n  longitude,\n  defaultLatLng,\n  onLatLngChang,\n}: any) {\n  const classes = useStyles();\n  const [latLng, setLatLng] = useState<null | LatLngProps>(null);\n  const [dLatLng, setDlatLng] = useState<any>(null);\n  const [address, setAddress] = useState(\"\");\n\n  useEffect(() => {\n    latitude = (latitude && parseFloat(latitude)) || null;\n    longitude = (longitude && parseFloat(longitude)) || null;\n    if (latitude) {\n      defaultLatLng.lat = latitude;\n      defaultLatLng.lng = longitude;\n    }\n    setLatLng({ lat: latitude, lng: longitude });\n    setDlatLng({ lat: defaultLatLng.lat, lng: defaultLatLng.lng });\n    getAddress({ lat: latitude, lng: longitude });\n  }, []);\n\n  const handleOnClick = (event: GoogleMapReact.ClickEventValue) => {\n    const { lat, lng } = event;\n\n    // console.log(event);\n    setLatLng({\n      lat: parseFloat(lat.toFixed(6)),\n      lng: parseFloat(lng.toFixed(6)),\n    });\n    getAddress({ lat, lng });\n  };\n\n  const handelOnChangeLanLng = () => {\n    latLng && onLatLngChang(latLng, address);\n  };\n  const handleOnChildClick = (hoverKey: any, childProps: any) => {\n    // console.log(hoverKey);\n    // console.log(childProps);\n  };\n\n  const getAddress = async ({ lat, lng }: any) => {\n    const result = await Axios.get(\n      `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${GEOCODING_APIKEY}`\n    );\n    const {\n      data: { results },\n    } = result;\n    const { formatted_address } = results[0];\n    setAddress(formatted_address || \"\");\n  };\n\n  return (\n    <>\n      <div style={{ height, width: \"100%\" }}>\n        {dLatLng && (\n          <GoogleMapReact\n            bootstrapURLKeys={{ key: MAP_APIKEY }}\n            defaultCenter={{ lat: dLatLng.lat, lng: dLatLng.lng }}\n            defaultZoom={11}\n            yesIWantToUseGoogleMapApiInternals={true}\n            onClick={handleOnClick}\n            onChildClick={handleOnChildClick}\n            // margin={[\n            //   K_MARGIN_TOP,\n            //   K_MARGIN_RIGHT,\n            //   K_MARGIN_BOTTOM,\n            //   K_MARGIN_LEFT,\n            // ]}\n            // hoverDistance={K_HOVER_DISTANCE}\n          >\n            {latLng && (\n              <AnyReactComponent lat={latLng.lat} lng={latLng.lng} text=\"\" />\n            )}\n          </GoogleMapReact>\n        )}\n      </div>\n\n      <div className={classes.bottom}>\n        <TextField\n          disabled\n          id=\"latitude\"\n          name=\"latitude\"\n          label=\"Latitude\"\n          fullWidth\n          value={latLng?.lat || \"\"}\n        />\n        <TextField\n          disabled\n          id=\"longitude\"\n          name=\"longitude\"\n          label=\"Longitude\"\n          fullWidth\n          placeholder=\"longitude\"\n          value={latLng?.lng || \"\"}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.customButton2}\n          onClick={handelOnChangeLanLng}\n        >\n          Confirm\n        </Button>\n      </div>\n      <Grid item xs={12}>\n        <TextField\n          id=\"address\"\n          name=\"address\"\n          label=\"Address\"\n          fullWidth\n          value={address}\n        />\n      </Grid>\n    </>\n  );\n}\n\nexport default React.memo(MapContainer2);\n"]},"metadata":{},"sourceType":"module"}