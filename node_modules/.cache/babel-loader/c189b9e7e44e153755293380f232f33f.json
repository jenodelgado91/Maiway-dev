{"ast":null,"code":"const MAIWAY_LANGUAGE = \"maiwayLanguage\";\nconst SEARCH_LANGUAGE = \"SEARCH_LANGUAGE\";\nconst UPDATE_LANGUAGE = \"UPDATE_LANGUAGE\"; // action type\n\nconst searchLangAction = language => ({\n  type: SEARCH_LANGUAGE,\n  payload: language\n});\n\nconst updateLangAction = language => ({\n  type: UPDATE_LANGUAGE,\n  payload: language\n});\n\nexport const getLanguage = () => {\n  const localLanguage = window.localStorage.getItem(MAIWAY_LANGUAGE) || \"EN\";\n  return localLanguage;\n};\n\nconst updateLanguage = language => {\n  window.localStorage.setItem(MAIWAY_LANGUAGE, language);\n  return language;\n}; // action\n\n\nexport const searchLangRequest = () => {\n  return async dispatch => {\n    try {\n      const localLanguage = getLanguage();\n      dispatch(searchLangAction(localLanguage));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}; // action\n\nexport const updateLangRequest = language => {\n  return async dispatch => {\n    try {\n      const changeLanguage = updateLanguage(language); // console.log(\"abc\", result.data);\n\n      dispatch(updateLangAction(changeLanguage));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nconst initState = {\n  language: getLanguage()\n}; // reducer\n\nconst languageReducer = (state = initState, action) => {\n  switch (action.type) {\n    case SEARCH_LANGUAGE:\n      return {\n        language: action.payload\n      };\n\n    case UPDATE_LANGUAGE:\n      return {\n        language: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default languageReducer;","map":{"version":3,"sources":["C:/Users/maipc3/Desktop/branchfor2live/maiway-dev/src/store/languageReducer.tsx"],"names":["MAIWAY_LANGUAGE","SEARCH_LANGUAGE","UPDATE_LANGUAGE","searchLangAction","language","type","payload","updateLangAction","getLanguage","localLanguage","window","localStorage","getItem","updateLanguage","setItem","searchLangRequest","dispatch","err","console","log","updateLangRequest","changeLanguage","initState","languageReducer","state","action"],"mappings":"AAEA,MAAMA,eAAe,GAAG,gBAAxB;AAEA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,eAAe,GAAG,iBAAxB,C,CAEA;;AACA,MAAMC,gBAAgB,GAAIC,QAAD,KAAuB;AAC9CC,EAAAA,IAAI,EAAEJ,eADwC;AAE9CK,EAAAA,OAAO,EAAEF;AAFqC,CAAvB,CAAzB;;AAIA,MAAMG,gBAAgB,GAAIH,QAAD,KAAuB;AAC9CC,EAAAA,IAAI,EAAEH,eADwC;AAE9CI,EAAAA,OAAO,EAAEF;AAFqC,CAAvB,CAAzB;;AASA,OAAO,MAAMI,WAAW,GAAG,MAAM;AAC/B,QAAMC,aAAa,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BZ,eAA5B,KAAgD,IAAtE;AACA,SAAOS,aAAP;AACD,CAHM;;AAKP,MAAMI,cAAc,GAAIT,QAAD,IAAsB;AAC3CM,EAAAA,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4Bd,eAA5B,EAA6CI,QAA7C;AACA,SAAOA,QAAP;AACD,CAHD,C,CAKA;;;AACA,OAAO,MAAMW,iBAAiB,GAAG,MAAM;AACrC,SAAO,MAAOC,QAAP,IAAyB;AAC9B,QAAI;AACF,YAAMP,aAAa,GAAGD,WAAW,EAAjC;AACAQ,MAAAA,QAAQ,CAACb,gBAAgB,CAACM,aAAD,CAAjB,CAAR;AACD,KAHD,CAGE,OAAOQ,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GAPD;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMG,iBAAiB,GAAIhB,QAAD,IAAsB;AACrD,SAAO,MAAOY,QAAP,IAAyB;AAC9B,QAAI;AACF,YAAMK,cAAc,GAAGR,cAAc,CAACT,QAAD,CAArC,CADE,CAEF;;AACAY,MAAAA,QAAQ,CAACT,gBAAgB,CAACc,cAAD,CAAjB,CAAR;AACD,KAJD,CAIE,OAAOJ,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GARD;AASD,CAVM;AAgBP,MAAMK,SAAqB,GAAG;AAC5BlB,EAAAA,QAAQ,EAAEI,WAAW;AADO,CAA9B,C,CAGA;;AACA,MAAMe,eAAe,GAAG,CAACC,KAAK,GAAGF,SAAT,EAAoBG,MAApB,KAA2C;AACjE,UAAQA,MAAM,CAACpB,IAAf;AACE,SAAKJ,eAAL;AACE,aAAO;AACLG,QAAAA,QAAQ,EAAEqB,MAAM,CAACnB;AADZ,OAAP;;AAGF,SAAKJ,eAAL;AACE,aAAO;AACLE,QAAAA,QAAQ,EAAEqB,MAAM,CAACnB;AADZ,OAAP;;AAGF;AACE,aAAOkB,KAAP;AAVJ;AAYD,CAbD;;AAeA,eAAeD,eAAf","sourcesContent":["import axios from \"axios\";\n\nconst MAIWAY_LANGUAGE = \"maiwayLanguage\";\n\nconst SEARCH_LANGUAGE = \"SEARCH_LANGUAGE\" as const;\nconst UPDATE_LANGUAGE = \"UPDATE_LANGUAGE\" as const;\n\n// action type\nconst searchLangAction = (language: string) => ({\n  type: SEARCH_LANGUAGE,\n  payload: language,\n});\nconst updateLangAction = (language: string) => ({\n  type: UPDATE_LANGUAGE,\n  payload: language,\n});\n\ntype actionType =\n  | ReturnType<typeof searchLangAction>\n  | ReturnType<typeof updateLangAction>;\n\nexport const getLanguage = () => {\n  const localLanguage = window.localStorage.getItem(MAIWAY_LANGUAGE) || \"EN\";\n  return localLanguage;\n};\n\nconst updateLanguage = (language: string) => {\n  window.localStorage.setItem(MAIWAY_LANGUAGE, language);\n  return language;\n};\n\n// action\nexport const searchLangRequest = () => {\n  return async (dispatch: any) => {\n    try {\n      const localLanguage = getLanguage();\n      dispatch(searchLangAction(localLanguage));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\n// action\nexport const updateLangRequest = (language: string) => {\n  return async (dispatch: any) => {\n    try {\n      const changeLanguage = updateLanguage(language);\n      // console.log(\"abc\", result.data);\n      dispatch(updateLangAction(changeLanguage));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\ninterface StateProps {\n  language: string;\n}\n\nconst initState: StateProps = {\n  language: getLanguage(),\n};\n// reducer\nconst languageReducer = (state = initState, action: actionType) => {\n  switch (action.type) {\n    case SEARCH_LANGUAGE:\n      return {\n        language: action.payload,\n      };\n    case UPDATE_LANGUAGE:\n      return {\n        language: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default languageReducer;\n"]},"metadata":{},"sourceType":"module"}