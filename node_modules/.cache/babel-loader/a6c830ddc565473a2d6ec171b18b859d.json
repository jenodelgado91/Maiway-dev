{"ast":null,"code":"import { FQdelete, FQsave, FQupdate } from \"../fQuery\";\nconst LOADING = \"LOADING\";\nconst SAVE = \"SAVE\";\nconst UPDATE = \"UPDATE\";\nconst DELETE = \"DELETE\";\nconst FAIL = \"FAIL\"; // action type\n\nconst loadingAction = () => ({\n  type: LOADING\n});\n\nconst saveAction = () => ({\n  type: SAVE\n});\n\nconst updateAction = () => ({\n  type: UPDATE\n});\n\nconst deleteAction = () => ({\n  type: DELETE\n});\n\nconst failAction = () => ({\n  type: FAIL\n});\n\n// action\nexport const saveRequest = (col, params) => {\n  return async dispatch => {\n    dispatch(loadingAction());\n\n    try {\n      // await axios.post(\"/api/fstore/save\", { col, params });\n      await FQsave({\n        col,\n        params\n      }); // console.log(\"abc\", result.data);\n\n      dispatch(saveAction());\n    } catch (e) {\n      dispatch(failAction());\n    }\n  };\n}; // action\n\nexport const updateRequest = (col, doc, params) => {\n  return async dispatch => {\n    dispatch(loadingAction());\n\n    try {\n      // await axios.post(\"/api/fstore/update\", { col, doc, params });\n      await FQupdate({\n        col,\n        doc,\n        params\n      }); // console.log(\"abc\", result.data);\n\n      dispatch(updateAction());\n    } catch (e) {\n      dispatch(failAction());\n    }\n  };\n}; // action\n\nexport const deleteRequest = (col, doc) => {\n  return async dispatch => {\n    dispatch(loadingAction());\n\n    try {\n      await FQdelete({\n        col,\n        doc\n      });\n      dispatch(deleteAction());\n    } catch (e) {\n      dispatch(failAction());\n    }\n  };\n};\nconst initState = {\n  status: \"\"\n}; // reducer\n\nconst cudReducer = (state = initState, action) => {\n  switch (action.type) {\n    case LOADING:\n      return { ...state,\n        status: \"WAITING\"\n      };\n\n    case SAVE:\n      return { ...state,\n        status: \"SUCCESS\"\n      };\n\n    case UPDATE:\n      return { ...state,\n        status: \"SUCCESS\"\n      };\n\n    case DELETE:\n      return { ...state,\n        status: \"SUCCESS\"\n      };\n\n    case FAIL:\n      return { ...state,\n        status: \"FAILURE\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cudReducer;","map":{"version":3,"sources":["C:/Users/maipc3/Desktop/branchfor2live/maiway-dev/src/store/cudReducer.tsx"],"names":["FQdelete","FQsave","FQupdate","LOADING","SAVE","UPDATE","DELETE","FAIL","loadingAction","type","saveAction","updateAction","deleteAction","failAction","saveRequest","col","params","dispatch","e","updateRequest","doc","deleteRequest","initState","status","cudReducer","state","action"],"mappings":"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","sourcesContent":["import { FQdelete, FQsave, FQupdate } from \"../fQuery\";\n\nconst LOADING = \"LOADING\";\nconst SAVE = \"SAVE\";\nconst UPDATE = \"UPDATE\";\nconst DELETE = \"DELETE\";\nconst FAIL = \"FAIL\";\n\n// action type\nconst loadingAction = () => ({\n  type: LOADING,\n});\n\nconst saveAction = () => ({\n  type: SAVE,\n});\nconst updateAction = () => ({\n  type: UPDATE,\n});\nconst deleteAction = () => ({\n  type: DELETE,\n});\nconst failAction = () => ({\n  type: FAIL,\n});\n\ntype actionType =\n  | ReturnType<typeof loadingAction>\n  | ReturnType<typeof saveAction>\n  | ReturnType<typeof updateAction>\n  | ReturnType<typeof deleteAction>\n  | ReturnType<typeof failAction>;\n\n// action\nexport const saveRequest = (col: string, params: {}) => {\n  return async (dispatch: any) => {\n    dispatch(loadingAction());\n    try {\n      // await axios.post(\"/api/fstore/save\", { col, params });\n      await FQsave({ col, params });\n      // console.log(\"abc\", result.data);\n      dispatch(saveAction());\n    } catch (e) {\n      dispatch(failAction());\n    }\n  };\n};\n\n// action\nexport const updateRequest = (col: string, doc: string, params: {}) => {\n  return async (dispatch: any) => {\n    dispatch(loadingAction());\n    try {\n      // await axios.post(\"/api/fstore/update\", { col, doc, params });\n      await FQupdate({ col, doc, params });\n      // console.log(\"abc\", result.data);\n      dispatch(updateAction());\n    } catch (e) {\n      dispatch(failAction());\n    }\n  };\n};\n\n// action\nexport const deleteRequest = (col: string, doc: string) => {\n  return async (dispatch: any) => {\n    dispatch(loadingAction());\n    try {\n      await FQdelete({ col, doc });\n      dispatch(deleteAction());\n    } catch (e) {\n      dispatch(failAction());\n    }\n  };\n};\n\ninterface StateProps {\n  status: string;\n  statusText?: string;\n  currentUser?: string;\n}\n\nconst initState: StateProps = {\n  status: \"\",\n};\n// reducer\nconst cudReducer = (state = initState, action: actionType) => {\n  switch (action.type) {\n    case LOADING:\n      return { ...state, status: \"WAITING\" };\n    case SAVE:\n      return {\n        ...state,\n        status: \"SUCCESS\",\n      };\n    case UPDATE:\n      return {\n        ...state,\n        status: \"SUCCESS\",\n      };\n    case DELETE:\n      return {\n        ...state,\n        status: \"SUCCESS\",\n      };\n    case FAIL:\n      return {\n        ...state,\n        status: \"FAILURE\",\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cudReducer;\n"]},"metadata":{},"sourceType":"module"}